apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: pg-lubelogger-nodes
  namespace: lubelogger
spec:
  instances: 1

  # Keep the new DB off the control plane (hl1)
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role.kubernetes.io/worker
            operator: Exists

  imageName: ghcr.io/cloudnative-pg/postgresql:15
  plugins:
    - name: barman-cloud.cloudnative-pg.io
      isWALArchiver: true
      parameters:
        barmanObjectName: pg-lubelogger-nodes
  
        # Spread replicas across workers if possible
  storage:
    size: 1Gi
    storageClass:  longhorn-single # e.g., longhorn, nfs-client, etc.

  # Restore from your existing Barman S3 backups
  bootstrap:
     recovery:
       source: s3-backups
       target:
         backupID: "20250916T144306"

  # Tell CNPG where the backups live
  externalClusters:
  - name: s3-backups
    barmanObjectStore:
      destinationPath: "s3://pg-lubelogger/lubelogger"
      serverName: "pg-lubelogger"
      # endpointURL: ""                        # leave empty for AWS S3
      s3Credentials:
        accessKeyId:
          name: aws-creds-nodev1
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: aws-creds-nodev1
          key: AWS_SECRET_ACCESS_KEY
        region:
          name: aws-creds-nodev1
          key: AWS_REGION
      wal:
        compression: gzip
